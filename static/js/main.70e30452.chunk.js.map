{"version":3,"sources":["components/Auth/AuthForm.module.css","components/Recipes/RecipeItem.module.css","components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/StartingPage/StartingPageContent.module.css","ui/Card.module.css","components/Recipes/RecipesList.module.css","components/Profile/UserProfile.module.css","store/auth-context.js","components/Layout/logo.png","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","ui/Card.js","components/Recipes/RecipeItem.js","components/Recipes/RecipesList.js","components/Recipes/PersonalRecipes.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","components/Recipes/RecipeForm.js","pages/AddRecipe.js","App.js","index.js","components/Recipes/RecipeForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","localId","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retrieveStoredToken","initialLocalId","localIdData","useState","setToken","setLocalId","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","history","useHistory","className","classes","header","to","logo","src","width","onClick","replace","Layout","ProfileForm","newPasswordInputRef","useRef","IsChanged","setIsChanged","form","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","ok","control","htmlFor","type","id","minLength","ref","action","Card","card","RecipeItem","item","image","alt","title","content","description","window","location","pathname","actions","result","json","resp","console","log","reFreshSign","getRefresh","RecipesList","list","recipes","map","recipe","key","PersonalRecipes","isLoading","setIsLoading","setReFreshSign","loadedRecipes","setLoadedRecipes","authCxt","response","data","push","newReFreshSign","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","auth","url","enteredEmail","enteredPassword","email","Error","expiresIn","toISOString","catch","err","alert","message","required","toggle","prevState","AuthPage","StartingPageContent","loading","starting","HomePage","RecipeForm","titleInputRef","imageInputRef","descriptionInputRef","enteredTitle","enteredImage","enteredDescription","recipeData","onAddRecipe","rows","AddRecipe","App","path","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.70e30452.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__1kjIZ\",\"control\":\"AuthForm_control__296nY\",\"actions\":\"AuthForm_actions__1nvzw\",\"toggle\":\"AuthForm_toggle__LNBp9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"RecipeItem_item__1CUn3\",\"image\":\"RecipeItem_image__1R91R\",\"content\":\"RecipeItem_content__1ERes\",\"actions\":\"RecipeItem_actions__vLzMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__3UpMA\",\"control\":\"ProfileForm_control__8hAvn\",\"action\":\"ProfileForm_action__EKgqZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__36YIR\",\"logo\":\"MainNavigation_logo__3B0gV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__3hyan\",\"loading\":\"StartingPageContent_loading__2npxg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2UOiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"RecipesList_list__LE-wY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__24tvt\"};","import React, {useState, useEffect, useCallback} from \"react\";\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '',\r\n    localId: '',\r\n    isLoggedIn: false,\r\n    login: (token) => {},\r\n    logout: () => {}\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n    const remainingDuration = adjExpirationTime - currentTime;\r\n    \r\n    return remainingDuration;\r\n}\r\n\r\nconst retrieveStoredLocalId = () => {\r\n    const storedLocalId = localStorage.getItem('localId');\r\n    \r\n    return {\r\n        localId: storedLocalId\r\n    }\r\n}\r\n\r\nconst retrieveStoredToken = () => {\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedExpirationDate = localStorage.getItem('expirationTime');\r\n\r\n    const remainingTime = calculateRemainingTime(storedExpirationDate);\r\n\r\n    if (remainingTime <= 3600) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expirationTime');\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        token: storedToken,\r\n        duration: remainingTime\r\n    };\r\n}\r\n\r\nexport const AuthContextProvider = (props) => {\r\n\r\n    const tokenData = retrieveStoredToken();\r\n    let initialToken;\r\n    if (tokenData) {\r\n        initialToken = tokenData.token;\r\n    }\r\n\r\n    const localIdData = retrieveStoredLocalId();\r\n    let initialLocalId;\r\n    if (localIdData){\r\n        initialLocalId = localIdData.localId;\r\n    }\r\n    \r\n    const[token, setToken] = useState(initialToken);\r\n    const[localId, setLocalId] = useState(initialLocalId);\r\n\r\n    const userIsLoggedIn = !!token; //Se è la stringa non è vuota, ritorna true, altrimenti false\r\n\r\n    const loginHandler = (token, expirationTime, localId) => {\r\n        setToken(token);\r\n        setLocalId(localId);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('localId', localId);\r\n        localStorage.setItem('expirationTime', expirationTime);\r\n\r\n        const remainingTime = calculateRemainingTime(expirationTime);\r\n\r\n        logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n\r\n    };\r\n    const logoutHandler = useCallback(() => {\r\n        setToken(null);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expirationTime');\r\n\r\n        if(logoutTimer)\r\n        {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (tokenData){\r\n            logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n        }\r\n    }, [tokenData, logoutHandler]);\r\n\r\n    const contextValue = {\r\n        token: token,\r\n        localId: localId,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler\r\n    }\r\n\r\n    return <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>\r\n}\r\n\r\nexport default AuthContext;\r\n","export default __webpack_public_path__ + \"static/media/logo.09d18962.png\";","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\nimport logo from './logo.png';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n\n  const isLoggedIn = authCtx.isLoggedIn;\n  const logoutHandler = () => {\n    authCtx.logout();\n    history.replace('/');\n  }\n\n  return (\n    <header className={classes.header}>\n      <Link to='/'>\n        <div className={classes.logo}><img src={logo} width=\"120px\" /></div>\n      </Link>\n      <nav>\n        <ul>\n          <li>\n            <Link to='/'>Home</Link>\n          </li>\n          {!isLoggedIn &&\n          <li>\n            <Link to='/auth'>Login</Link>\n          </li>}\n          {isLoggedIn &&\n          <li>\n            <Link to='/profile'>Profilo</Link>\n          </li>}\n          {isLoggedIn &&\n          <li>\n            <Link to='/add-recipe'>Aggiungi Ricetta</Link>\n          </li>}\n          {isLoggedIn &&\n          <li>\n            <button onClick={logoutHandler}>Logout</button>\n          </li>}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport classes from './ProfileForm.module.css';\nimport { useState } from 'react';\n\nconst ProfileForm = () => {\n\n  const newPasswordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [IsChanged, setIsChanged]  = useState(false);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    fetch(\n      'https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyDtH_Q1jBKRe0HM0TuDs2T9eiGvgHq0BII',\n      {\n        method: 'POST',\n        body: JSON.stringify({\n          idToken: authCtx.token,\n          password: enteredNewPassword,\n          returnSecureToken: false\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n\n        if(res.ok)\n        {\n          setIsChanged(true);\n        }\n        \n      })\n\n      setIsChanged(false);\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>Nuova password</label>\n        <input type='password' id='new-password' minLength=\"7\" ref={newPasswordInputRef}/>\n      </div>\n      <div className={classes.action}>\n        <button>Cambia la password</button>\n        {IsChanged &&\n        <p>Password cambiata con successo!</p>}\n      </div>\n    </form>\n  );\n}\n\nexport default ProfileForm;\n","import classes from './Card.module.css';\r\n\r\nfunction Card(props){\r\n    return(\r\n        <div className={classes.card}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from './../../ui/Card';\r\nimport AuthContext from '../../store/auth-context';\r\nimport { useContext } from 'react';\r\nimport classes from './RecipeItem.module.css';\r\n\r\nfunction RecipeItem(props){\r\n\r\n    // const authCxt = useContext(AuthContext);\r\n    function deleteRecipe(id){\r\n\r\n    fetch(`\r\n        https://food-app-e237c-default-rtdb.firebaseio.com/recipes/${id}.json`,\r\n        {\r\n            method: 'DELETE',\r\n\r\n        }).then((result) => {\r\n            result.json().then((resp) => {\r\n                console.log('reFreshSign', props.reFreshSign)\r\n                props.getRefresh(!props.reFreshSign)\r\n            })\r\n        });\r\n        \r\n    }\r\n\r\n    const authCtx = useContext(AuthContext);\r\n\r\n    return(\r\n        <div>   \r\n            <li className={classes.item}>\r\n                <Card>\r\n                    <div className={classes.image}>\r\n                        <img src={props.image} alt={props.title} />\r\n                    </div>\r\n                    <div className={classes.content}>\r\n                        <h3>{props.title}</h3>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    {authCtx.isLoggedIn && window.location.pathname === '/profile' &&\r\n                        <div className={classes.actions}>\r\n                            <button onClick={() => deleteRecipe(props.id)}>Elimina</button>\r\n                        </div>\r\n                    }\r\n                </Card>\r\n            </li>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecipeItem;","import RecipeItem from \"./RecipeItem\";\r\nimport classes from './RecipesList.module.css';\r\n\r\n\r\nfunction RecipesList(props){\r\n    return(\r\n    <ul className={classes.list}>\r\n        {props.recipes.map((recipe) => (\r\n            <RecipeItem\r\n                key={recipe.key}\r\n                id={recipe.id}\r\n                localId={recipe.localId}\r\n                title={recipe.title}\r\n                image={recipe.image}\r\n                description={recipe.description}\r\n                getRefresh={props.getRefresh}\r\n                reFreshSign={props.reFreshSign}\r\n            />\r\n        ))}\r\n    </ul>\r\n    );\r\n\r\n    \r\n}\r\n\r\nexport default RecipesList;","import { useState, useEffect, useContext} from \"react\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport RecipesList from './../Recipes/RecipesList';\r\n\r\nexport const PersonalRecipes = () => {\r\n\r\n    const [isLoading, setIsLoading] =  useState(true);\r\n    const [reFreshSign, setReFreshSign] = useState(false)\r\n    const [loadedRecipes, setLoadedRecipes] = useState([]);\r\n    const authCxt = useContext(AuthContext);\r\n\r\n    const getRefresh = (newReFreshSign) => {\r\n      setReFreshSign(newReFreshSign)\r\n    }\r\n\r\n    const getList = async () => {\r\n      const recipesPromise = fetch('https://food-app-e237c-default-rtdb.firebaseio.com/recipes.json').then((response) => {\r\n          return response.json();\r\n      })\r\n      const data = await recipesPromise\r\n      const recipes = [];\r\n    \r\n      for (const key in data) {\r\n        const recipe = {\r\n          id: key,\r\n          ...data[key]\r\n        };\r\n    \r\n        if(authCxt.localId === recipe.localId)\r\n      {\r\n        recipes.push(recipe);\r\n      }}\r\n      return recipes\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n\r\n        fetch('https://food-app-e237c-default-rtdb.firebaseio.com/recipes.json'\r\n        ).then((response) => {\r\n            return response.json();\r\n        }).then((data) => {\r\n            const recipes = [];\r\n    \r\n            for (const key in data) {\r\n              const recipe = {\r\n                id: key,\r\n                ...data[key]\r\n              };\r\n\r\n              if(authCxt.localId === recipe.localId)\r\n            {\r\n              recipes.push(recipe);\r\n            }\r\n    \r\n            }\r\n            setIsLoading(false);\r\n            setLoadedRecipes(recipes);\r\n        })\r\n    \r\n      }, [reFreshSign]);\r\n\r\n      if(isLoading)\r\n      {\r\n        return(\r\n          <section>\r\n            <p>Caricamento..</p>\r\n          </section>\r\n        );\r\n      }\r\n    \r\n\r\n    return(\r\n    <section>\r\n      <h1>Le tue ricette</h1>\r\n      {\r\n        !isLoading ? <RecipesList recipes={loadedRecipes} reFreshSign={reFreshSign} getRefresh={getRefresh} ></RecipesList> : null   \r\n      }\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default PersonalRecipes;","import ProfileForm from './ProfileForm';\nimport PersonalRecipes from '../Recipes/PersonalRecipes';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Il tuo profilo</h1>\n      <ProfileForm />\n      <PersonalRecipes />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport { useHistory } from 'react-router-dom';\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n  \n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    setIsLoading(true);\n    let url;\n    if (isLogin){\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDtH_Q1jBKRe0HM0TuDs2T9eiGvgHq0BII';\n    }\n    else{\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDtH_Q1jBKRe0HM0TuDs2T9eiGvgHq0BII';\n    }\n\n    fetch(url,\n      {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    ).then(res => {\n      setIsLoading(false);\n      if (res.ok){\n        return res.json();\n      }\n      else {\n        return res.json().then(data =>{\n          let errorMessage = \"Autenticazione fallita!\";\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      const expirationTime = new Date(new Date().getTime() + (+data.expiresIn * 1000));\n      authCtx.login(data.idToken, expirationTime.toISOString(), data.localId);\n      history.replace('/');\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Registrati'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>La tua email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>La tua password</label>\n          <input type='password' id='password' required ref={passwordInputRef}/>\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? 'Login' : 'Crea Account'}</button>}\n          {isLoading && <p>Sto inviando le informazioni..</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Crea un nuovo account' : 'Login con un profilo esistente'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import { useState, useEffect } from \"react\";\nimport RecipesList from './../Recipes/RecipesList';\nimport classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n\n  const [isLoading, setIsLoading] =  useState(true);\n  const [loadedRecipes, setLoadedRecipes] = useState([]);\n\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch('https://food-app-e237c-default-rtdb.firebaseio.com/recipes.json'\n    ).then((response) => {\n        return response.json();\n    }).then((data) => {\n        const recipes = [];\n\n        for (const key in data) {\n          const recipe = {\n            id: key,\n            ...data[key]\n          };\n\n          recipes.push(recipe);\n\n        }\n        setIsLoading(false);\n        setLoadedRecipes(recipes);\n    });\n\n  }, []);\n\n  if(isLoading)\n    {\n      return(\n        <section>\n          <p className={classes.loading}>Caricamento..</p>\n        </section>\n      );\n    }\n\n  return (\n    <section className={classes.starting}>\n      <h1>Tutte le ricette</h1>\n      <RecipesList recipes={loadedRecipes}></RecipesList>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useRef, useContext } from 'react';\r\nimport classes from './RecipeForm.module.css';\r\nimport AuthContext from '../../store/auth-context';\r\n\r\nfunction RecipeForm(props){\r\n\r\n    const titleInputRef = useRef();\r\n    const imageInputRef = useRef();\r\n    const descriptionInputRef = useRef();\r\n    const authCtx = useContext(AuthContext);\r\n\r\n    function submitHandler(event){\r\n\r\n        event.preventDefault();\r\n\r\n        const enteredTitle = titleInputRef.current.value;\r\n        const enteredImage = imageInputRef.current.value;\r\n        const enteredDescription = descriptionInputRef.current.value;\r\n        const defaultLocalId = authCtx.localId;\r\n\r\n        const recipeData = {\r\n            localId: defaultLocalId,\r\n            title: enteredTitle,\r\n            image: enteredImage,\r\n            description: enteredDescription\r\n        }\r\n\r\n        props.onAddRecipe(recipeData);\r\n    }\r\n\r\n    return(\r\n        <section className={classes.starting}>\r\n            <h1>Aggiungi una ricetta</h1>\r\n            <form className={classes.form} onSubmit={submitHandler}>\r\n                <div className={classes.control}>\r\n                    <label className={classes.control}>Titolo</label>\r\n                    <input type='text' id='title-recipe' required ref={titleInputRef} />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label>Immagine</label>\r\n                    <input type='url' id='image-recipe' required ref={imageInputRef}/>\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label>Procedimento</label>\r\n                    <textarea id='description-recipe' required rows='7' ref={descriptionInputRef}></textarea>\r\n                </div>\r\n                <div className={classes.actions}>\r\n                    <button>Aggiungi Ricetta</button>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default RecipeForm;","import RecipeForm from \"../components/Recipes/RecipeForm\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AddRecipe = () => {\r\n    const history = useHistory();\r\n\r\n    function addRecipeHandler(recipeData){\r\n        fetch(\r\n            'https://food-app-e237c-default-rtdb.firebaseio.com/recipes.json',\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify(recipeData),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(() => {\r\n            history.replace('/');\r\n        });\r\n    }\r\n    return <RecipeForm onAddRecipe={addRecipeHandler} />;\r\n}\r\n\r\nexport default AddRecipe;","import { useContext } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\nimport AuthContext from './store/auth-context';\nimport AddRecipe from './pages/AddRecipe';\n\nfunction App() {\n\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <HomePage />\n        </Route>\n        {!authCtx.isLoggedIn &&\n        <Route path='/auth'>\n          <AuthPage />\n        </Route>\n        }\n        {authCtx.isLoggedIn &&\n        <Route path='/profile'>\n          <UserProfile />\n        </Route>\n        }\n        {authCtx.isLoggedIn &&\n        <Route path='/add-recipe'>\n          <AddRecipe />\n        </Route>\n        }\n        <Route path='*'>\n          <Redirect to ='/' />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport { AuthContextProvider } from './store/auth-context';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"RecipeForm_starting__2HMge\",\"form\":\"RecipeForm_form__3tfZM\",\"control\":\"RecipeForm_control__3ys0D\",\"actions\":\"RecipeForm_actions__2BxKd\"};"],"sourceRoot":""}